(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,u){var c=e._id,a=e.name,s=e.link,l=e.likes,f=e.owner;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._id=c,this._text=a,this._image=s,this._likes=l,this._owner=f,this._userInfo=n,this._cardTemplateSelector=r,this._handleCardClick=o,this._handleLikeClick=i,this._handleDeleteClick=u,this._isLiked=!1,this._likesCount=0}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardTemplateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){var e=this;this._element=this._getTemplate(),this._setEventListeners();var t=this._element.querySelector(".element__title"),n=this._element.querySelector(".element__photo"),r=this._element.querySelector(".element__like-button"),o=this._element.querySelector(".element__like-count"),i=this._element.querySelector(".element__delete-button");return t.textContent=this._text,n.src=this._image,n.alt=this._text,this._likesCount=this._likes.length,o.textContent=this._likes.length,this._likes.some((function(t){return t._id===e._userInfo._id}))?(r.classList.add("element__like-button_active"),this._isLiked=!0):r.classList.remove("element__like-button_active"),this._userInfo._id!==this._owner._id&&i.remove(),this._element}},{key:"isLiked",value:function(){return this._isLiked}},{key:"delete",value:function(e){e.closest(".element").remove()}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__delete-button").addEventListener("click",(function(t){return e._remove()})),this._element.querySelector(".element__like-button").addEventListener("click",(function(t){return e._like(t.target)})),this._element.querySelector(".element__photo").addEventListener("click",(function(t){return e._preview()}))}},{key:"_remove",value:function(){this._handleDeleteClick(this._element,this._id)}},{key:"_like",value:function(e){var t=this._element.querySelector(".element__like-count");e.classList.toggle("element__like-button_active"),this._isLiked=!this._isLiked,this._isLiked?(this._likesCount++,t.textContent=this._likesCount):(this._likesCount--,t.textContent=this._likesCount),this._handleLikeClick(this._id,this._isLiked)}},{key:"_preview",value:function(){this._handleCardClick(this._text,this._image)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){var n=t.formSelector,r=t.inputSelector,o=t.submitButtonSelector,i=t.inactiveButtonClass,u=t.inputErrorClass,c=t.errorClass;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=document.querySelector(n),this._input=r,this._submitButton=o,this._inactiveButtonClass=i,this._inputErrorClass=u,this._errorClass=c,this._inputList=Array.from(this._form.querySelectorAll(this._input)),this._buttonElement=this._form.querySelector(this._submitButton)}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._setEventListeners(this._form)}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){return e._hideInputError(t)}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState()}))}))}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","")):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),o={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_error",errorClass:"popup__form-text-error"},i=".popup_type_card",u=".popup_type_avatar",c=".popup_type_profile",a=document.querySelector(".popup_type_profile"),s=a.querySelector("#nameInput"),l=a.querySelector("#jobInput"),f=document.querySelector(".profile__edit-button"),p=document.querySelector(".profile__add-button"),h=document.querySelector(".profile__avatar-icon");function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){var t=this._renderer(e);this._container.prepend(t)}},{key:"removeItem",value:function(e){this._container.removeChild(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;this.clear(),e.forEach((function(e){return t.addItem(e)}))}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var v=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._closePopupByEscape=this._closePopupByEscape.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._closePopupByEscape)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._closePopupByEscape)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){return e._closePopup(t)}))}},{key:"_closePopup",value:function(e){(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__close-button"))&&this.close()}},{key:"_closePopupByEscape",value:function(e){"Escape"===e.key&&this.close()}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function w(e,t){return w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},w(e,t)}function O(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function u(e,t){var n,r=t.photoSelector,o=t.captionSelector;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._previewPopupPhoto=n._popup.querySelector(r),n._previewPopupCaption=n._popup.querySelector(o),n}return t=u,(n=[{key:"open",value:function(e,t){this._previewPopupCaption.textContent=e,this._previewPopupPhoto.src=t,this._previewPopupPhoto.alt=e,k(S(u.prototype),"open",this).call(this)}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(v);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=C(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function C(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function q(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=t,n._form=n._popup.querySelector(".popup__form"),n._inputList=n._form.querySelectorAll(".popup__input"),n._submitButton=n._form.querySelector(".popup__button"),n._origSubmitButtonText=n._submitButton.textContent,n}return t=u,(n=[{key:"setEventListeners",value:function(){var e=this;L(B(u.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){return e._submitHandler()}))}},{key:"close",value:function(){L(B(u.prototype),"close",this).call(this),this._form.reset()}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._origSubmitButtonText}},{key:"_submitHandler",value:function(){this._handleFormSubmit(this._getInputValues())}},{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(v);function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=D(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},x.apply(this,arguments)}function D(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=H(e)););return e}function V(e,t){return V=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},V(e,t)}function A(e,t){if(t&&("object"===R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function H(e){return H=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},H(e)}var F=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=H(r);if(o){var n=H(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return A(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=t,n}return t=u,(n=[{key:"open",value:function(e){x(H(u.prototype),"open",this).call(this),this._data=e}},{key:"setEventListeners",value:function(){var e=this;x(H(u.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._data)}))}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(v);function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t),this._job=document.querySelector(n),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._userData}},{key:"setUserInfo",value:function(e){this._userData=e,this._name.textContent=e.name,this._job.textContent=e.about,this._avatar.src=e.avatar}}])&&N(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,n;return t=e,(n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).catch((function(e){return console.log("Ошибка: ".concat(e))}))}},{key:"postCard",value:function(e,t){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers,method:"POST",body:JSON.stringify({name:e,link:t})}).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).catch((function(e){return console.log("Ошибка: ".concat(e))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers,method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).catch((function(e){return console.log("Ошибка: ".concat(e))}))}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{headers:this._headers,method:"PUT"}).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).catch((function(e){return console.log("Ошибка: ".concat(e))}))}},{key:"removeLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{headers:this._headers,method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).catch((function(e){return console.log("Ошибка: ".concat(e))}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).catch((function(e){return console.log("Ошибка: ".concat(e))}))}},{key:"patchUserInfo",value:function(e,t){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).catch((function(e){return console.log("Ошибка: ".concat(e))}))}},{key:"patchUserAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject(e.status)})).catch((function(e){return console.log("Ошибка: ".concat(e))}))}}])&&M(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-33",headers:{authorization:"20f1beb6-6801-4a67-a1e2-4a17380dc299","Content-Type":"application/json"}});function G(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function K(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?G(Object(n),!0).forEach((function(t){Q(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):G(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Q(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var W=new j(".popup_type_preview",{photoSelector:".popup__photo",captionSelector:".popup__caption"});W.setEventListeners();var X=new F(".popup_type_confirmation",(function(e){return z.deleteCard(e.id).then((function(){oe.removeItem(e.element),X.close()}))}));X.setEventListeners();var Y=new T(i,(function(e){return z.postCard(e.name,e.link).then((function(e){oe.addItem(e),Y.close()}))}));Y.setEventListeners();var Z=new r(K(K({},o),{},{formSelector:i}));Z.enableValidation();var $=new T(c,(function(e){$.renderLoading(!0),z.patchUserInfo(e.name,e.description).then((function(e){return re.setUserInfo(e)})).finally((function(){$.renderLoading(!1),$.close()}))}));$.setEventListeners();var ee=new r(K(K({},o),{},{formSelector:c}));ee.enableValidation();var te=new T(u,(function(e){te.renderLoading(!0),z.patchUserAvatar(e.link).then((function(){var t=re.getUserInfo();re.setUserInfo(K(K({},t),{},{avatar:e.link}))})).finally((function(){te.renderLoading(!1),te.close()}))}));te.setEventListeners();var ne=new r(K(K({},o),{},{formSelector:u}));ne.enableValidation();var re=new J(".profile__title",".profile__subtitle",".profile__avatar-icon"),oe=new y((function(e){return function(e){var n=re.getUserInfo();return new t(e,n,"#element",(function(e,t){W.open(e,t)}),(function(e,t){t?z.addLike(e):z.removeLike(e)}),(function(e,t){X.open({element:e,id:t})})).generateCard()}(e)}),".elements");f.addEventListener("click",(function(){ee.resetValidation();var e=re.getUserInfo();s.value=e.name,l.value=e.about,$.open()})),p.addEventListener("click",(function(){Z.resetValidation(),Y.open("","")})),h.addEventListener("click",(function(){ne.resetValidation(),te.open()})),z.getUserInfo().then((function(e){return re.setUserInfo(e)})).then((function(){return z.getInitialCards().then((function(e){return oe.renderItems(e)}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QixPQWRhLElBQUloTSxFQUFLMEksRUFBTXpJLEVSbEdNLFlRbUdoQyxTQUFDNkIsRUFBT0MsR0FDTjhJLEVBQWFxQixLQUFLcEssRUFBT0MsTUFFM0IsU0FBQ3FELEVBQUkrRyxHQUNDQSxFQUNGN0MsRUFBSThDLFFBQVFoSCxHQUVaa0UsRUFBSStDLFdBQVdqSCxNQUVuQixTQUFDcUIsRUFBU3JCLEdBQ1IyRixFQUFrQm1CLEtBQUssQ0FBRXpGLFFBQUFBLEVBQVNyQixHQUFBQSxPQUcxQmtILGVBdENGQyxDQUFrQjdELEtSM0VELGFRK0U3QjBDLEVBQUFBLGlCQUFrQyxTQUFTLFdBQ3pDVSxHQUFzQlUsa0JBQ3RCLElBQU12TSxFQUFPMEwsR0FBU0ssY0FDdEJaLEVBQUFBLE1BQTBCbkwsRUFBS00sS0FDL0I2SyxFQUFBQSxNQUF5Qm5MLEVBQUttSixNQUM5QnhELEVBQWFzRyxVQUdmZCxFQUFBQSxpQkFBaUMsU0FBUyxXQUN4Q0UsRUFBbUJrQixrQkFDbkJyQixFQUFVZSxLQUFLLEdBQUksT0FHckJkLEVBQUFBLGlCQUFvQyxTQUFTLFdBQzNDYSxHQUFxQk8sa0JBQ3JCVCxHQUFZRyxVQXNCZDVDLEVBQUkwQyxjQUNEbkMsTUFBSyxTQUFDbkIsR0FBRCxPQUNKaUQsR0FBU0MsWUFBWWxELE1BQ3RCbUIsTUFBSyxrQkFDSlAsRUFBSW1ELGtCQUFrQjVDLE1BQUssU0FBQ25CLEdBQUQsT0FBVXVDLEdBQVV5QixZQUFZaEUsVSIsInNvdXJjZXMiOlsid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKHsgX2lkLCBuYW1lLCBsaW5rLCBsaWtlcywgb3duZXIgfSwgaW5mbywgY2FyZFRlbXBsYXRlU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaywgaGFuZGxlTGlrZUNsaWNrLCBoYW5kbGVEZWxldGVDbGljaykge1xuICAgIHRoaXMuX2lkID0gX2lkO1xuICAgIHRoaXMuX3RleHQgPSBuYW1lO1xuICAgIHRoaXMuX2ltYWdlID0gbGluaztcbiAgICB0aGlzLl9saWtlcyA9IGxpa2VzO1xuICAgIHRoaXMuX293bmVyID0gb3duZXI7XG4gICAgdGhpcy5fdXNlckluZm8gPSBpbmZvO1xuICAgIHRoaXMuX2NhcmRUZW1wbGF0ZVNlbGVjdG9yID0gY2FyZFRlbXBsYXRlU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrO1xuXG4gICAgdGhpcy5faXNMaWtlZCA9IGZhbHNlO1xuICAgIHRoaXMuX2xpa2VzQ291bnQgPSAwO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRUZW1wbGF0ZVNlbGVjdG9yKVxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50XCIpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICBjb25zdCB0aXRsZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X190aXRsZVwiKTtcbiAgICBjb25zdCBwaG90byA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19waG90b1wiKTtcbiAgICBjb25zdCBsaWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2xpa2UtYnV0dG9uXCIpO1xuICAgIGNvbnN0IGxpa2VDb3VudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19saWtlLWNvdW50XCIpO1xuICAgIGNvbnN0IGRlbGV0ZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19kZWxldGUtYnV0dG9uXCIpO1xuXG4gICAgdGl0bGUudGV4dENvbnRlbnQgPSB0aGlzLl90ZXh0O1xuICAgIHBob3RvLnNyYyA9IHRoaXMuX2ltYWdlO1xuICAgIHBob3RvLmFsdCA9IHRoaXMuX3RleHQ7XG4gICAgdGhpcy5fbGlrZXNDb3VudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcbiAgICBsaWtlQ291bnQudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XG5cbiAgICBpZiAodGhpcy5fbGlrZXMuc29tZSgobGlrZSkgPT4gbGlrZS5faWQgPT09IHRoaXMuX3VzZXJJbmZvLl9pZCkpIHtcbiAgICAgIGxpa2VCdXR0b24uY2xhc3NMaXN0LmFkZChcImVsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbiAgICAgIHRoaXMuX2lzTGlrZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBsaWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoXCJlbGVtZW50X19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX3VzZXJJbmZvLl9pZCAhPT0gdGhpcy5fb3duZXIuX2lkKVxuICAgICAgZGVsZXRlQnV0dG9uLnJlbW92ZSgpXG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIGlzTGlrZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lzTGlrZWQ7XG4gIH1cblxuICBkZWxldGUoaXRlbSkge1xuICAgIGl0ZW0uY2xvc2VzdChcIi5lbGVtZW50XCIpLnJlbW92ZSgpO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2RlbGV0ZS1idXR0b25cIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHRoaXMuX3JlbW92ZSgpKTtcblxuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2xpa2UtYnV0dG9uXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB0aGlzLl9saWtlKGUudGFyZ2V0KSk7XG5cbiAgICB0aGlzLl9lbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19waG90b1wiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4gdGhpcy5fcHJldmlldygpKTtcbiAgfVxuXG4gIF9yZW1vdmUoKSB7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sodGhpcy5fZWxlbWVudCwgdGhpcy5faWQpO1xuICB9XG5cbiAgX2xpa2UoaXRlbSkge1xuICAgIGNvbnN0IGxpa2VDb3VudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19saWtlLWNvdW50XCIpO1xuICAgIGl0ZW0uY2xhc3NMaXN0LnRvZ2dsZShcImVsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbiAgICB0aGlzLl9pc0xpa2VkID0gIXRoaXMuX2lzTGlrZWQ7XG4gICAgaWYgKHRoaXMuX2lzTGlrZWQpIHtcbiAgICAgIHRoaXMuX2xpa2VzQ291bnQrKztcbiAgICAgIGxpa2VDb3VudC50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzQ291bnQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2xpa2VzQ291bnQtLTtcbiAgICAgIGxpa2VDb3VudC50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzQ291bnQ7XG4gICAgfVxuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayh0aGlzLl9pZCwgdGhpcy5faXNMaWtlZCk7XG4gIH1cblxuICBfcHJldmlldygpIHtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sodGhpcy5fdGV4dCwgdGhpcy5faW1hZ2UpXG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKHtcclxuICAgIGZvcm1TZWxlY3RvcixcclxuICAgIGlucHV0U2VsZWN0b3IsXHJcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3MsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3MsXHJcbiAgICBlcnJvckNsYXNzLFxyXG4gIH0pIHtcclxuICAgIHRoaXMuX2Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGZvcm1TZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9pbnB1dCA9IGlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSBzdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBpbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IGVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dCkpO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b24pO1xyXG4gICAgXHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnModGhpcy5fZm9ybSk7XHJcbiAgfVxyXG5cclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT5cclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcblxyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2lzVmFsaWQoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX2lzVmFsaWQoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcclxuICB9XHJcblxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xyXG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICcnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5wb3B1cF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idXR0b25cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fYnV0dG9uX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJwb3B1cF9fZm9ybS10ZXh0LWVycm9yXCIsXG59O1xuXG5leHBvcnQgY29uc3QgY2FyZHNTZWxlY3RvciA9IFwiLmVsZW1lbnRzXCI7XG5leHBvcnQgY29uc3QgY2FyZFRlbXBsYXRlU2VsZWN0b3IgPSBcIiNlbGVtZW50XCI7XG5cbmV4cG9ydCBjb25zdCBwcmV2aWV3UG9wdXBTZWxlY3RvciA9IFwiLnBvcHVwX3R5cGVfcHJldmlld1wiO1xuZXhwb3J0IGNvbnN0IGNhcmRQb3B1cFNlbGVjdG9yID0gXCIucG9wdXBfdHlwZV9jYXJkXCI7XG5leHBvcnQgY29uc3QgYXZhdGFyUG9wdXBTZWxlY3RvciA9IFwiLnBvcHVwX3R5cGVfYXZhdGFyXCI7XG5leHBvcnQgY29uc3QgcHJvZmlsZVBvcHVwU2VsZWN0b3IgPSBcIi5wb3B1cF90eXBlX3Byb2ZpbGVcIjtcbmV4cG9ydCBjb25zdCBwcm9maWxlVGl0bGVTZWxlY3RvciA9IFwiLnByb2ZpbGVfX3RpdGxlXCI7XG5leHBvcnQgY29uc3QgcHJvZmlsZVN1YnRpdGxlU2VsZWN0b3IgPSBcIi5wcm9maWxlX19zdWJ0aXRsZVwiO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXJTZWxlY3RvciA9IFwiLnByb2ZpbGVfX2F2YXRhclwiO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXJJY29uU2VsZWN0b3IgPSBcIi5wcm9maWxlX19hdmF0YXItaWNvblwiO1xuZXhwb3J0IGNvbnN0IHBob3RvU2VsZWN0b3IgPSBcIi5wb3B1cF9fcGhvdG9cIjtcbmV4cG9ydCBjb25zdCBjYXB0aW9uU2VsZWN0b3IgPSBcIi5wb3B1cF9fY2FwdGlvblwiO1xuXG5leHBvcnQgY29uc3QgcHJvZmlsZVBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX3Byb2ZpbGVcIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWUgPSBwcm9maWxlUG9wdXAucXVlcnlTZWxlY3RvcihcIiNuYW1lSW5wdXRcIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZUpvYiA9IHByb2ZpbGVQb3B1cC5xdWVyeVNlbGVjdG9yKFwiI2pvYklucHV0XCIpO1xuXG5leHBvcnQgY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIik7XG5leHBvcnQgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xuZXhwb3J0IGNvbnN0IGF2YXRhckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyLWljb25cIik7XG5cbmV4cG9ydCBjb25zdCBjb25maXJtYXRpb25Qb3B1cFNlbGVjdG9yID0gXCIucG9wdXBfdHlwZV9jb25maXJtYXRpb25cIjtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3RvcihyZW5kZXJlciwgY29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICB9XG5cbiAgYWRkSXRlbShpdGVtKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChjYXJkRWxlbWVudCk7XG4gIH1cblxuICByZW1vdmVJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucmVtb3ZlQ2hpbGQoZWxlbWVudCk7XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICB0aGlzLl9jb250YWluZXIuaW5uZXJIVE1MID0gXCJcIjtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7XG4gICAgdGhpcy5jbGVhcigpO1xuICAgIGl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHRoaXMuYWRkSXRlbShpdGVtKSk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9jbG9zZVBvcHVwQnlFc2NhcGUgPSB0aGlzLl9jbG9zZVBvcHVwQnlFc2NhcGUuYmluZCh0aGlzKTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5fY2xvc2VQb3B1cEJ5RXNjYXBlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2Nsb3NlUG9wdXBCeUVzY2FwZSk7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4gdGhpcy5fY2xvc2VQb3B1cChlKSk7XHJcbiAgfVxyXG5cclxuICBfY2xvc2VQb3B1cChldnQpIHtcclxuICAgIGlmIChcclxuICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cF9vcGVuZWRcIikgfHxcclxuICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cF9fY2xvc2UtYnV0dG9uXCIpXHJcbiAgICApIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2Nsb3NlUG9wdXBCeUVzY2FwZShldnQpIHtcclxuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCB7IHBob3RvU2VsZWN0b3IsIGNhcHRpb25TZWxlY3RvciB9KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuXHJcbiAgICB0aGlzLl9wcmV2aWV3UG9wdXBQaG90byA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IocGhvdG9TZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9wcmV2aWV3UG9wdXBDYXB0aW9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihjYXB0aW9uU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgb3Blbih0aXRsZSwgcGhvdG8pIHtcclxuICAgIHRoaXMuX3ByZXZpZXdQb3B1cENhcHRpb24udGV4dENvbnRlbnQgPSB0aXRsZTtcclxuICAgIHRoaXMuX3ByZXZpZXdQb3B1cFBob3RvLnNyYyA9IHBob3RvO1xyXG4gICAgdGhpcy5fcHJldmlld1BvcHVwUGhvdG8uYWx0ID0gdGl0bGU7XHJcblxyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fb3JpZ1N1Ym1pdEJ1dHRvblRleHQgPSB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB0aGlzLl9zdWJtaXRIYW5kbGVyKCkpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcpIHtcclxuICAgIGlmIChpc0xvYWRpbmcpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCLQodC+0YXRgNCw0L3QtdC90LjQtS4uLlwiO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fb3JpZ1N1Ym1pdEJ1dHRvblRleHQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfc3VibWl0SGFuZGxlcigpIHtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICB0aGlzLl9mb3JtVmFsdWVzID0ge307XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgdGhpcy5fZm9ybVZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gdGhpcy5fZm9ybVZhbHVlcztcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm1hdGlvbiBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICB9XG5cbiAgb3BlbihkYXRhKSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2RhdGEpO1xuICAgIH0pO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcm9maWxlVGl0bGVTZWxlY3RvcixcclxuICAgIHByb2ZpbGVTdWJUaXRsZVNlbGVjdG9yLFxyXG4gICAgcHJvZmlsZUF2YXRhclNlbGVjdG9yXHJcbiAgKSB7XHJcbiAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlVGl0bGVTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9qb2IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVTdWJUaXRsZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2F2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZUF2YXRhclNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3VzZXJEYXRhO1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oZGF0YSkge1xyXG4gICAgdGhpcy5fdXNlckRhdGEgPSBkYXRhO1xyXG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2pvYi50ZXh0Q29udGVudCA9IGRhdGEuYWJvdXQ7XHJcbiAgICB0aGlzLl9hdmF0YXIuc3JjID0gZGF0YS5hdmF0YXI7XHJcbiAgfVxyXG59XHJcbiIsImNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcclxuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xyXG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XHJcbiAgfVxyXG5cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7IGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMgfSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1cyk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwOiAke2Vycn1gKSk7XHJcbiAgfVxyXG5cclxuICBwb3N0Q2FyZChuYW1lLCBsaW5rKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBuYW1lLFxyXG4gICAgICAgIGxpbms6IGxpbmssXHJcbiAgICAgIH0pLFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1cyk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwOiAke2Vycn1gKSk7XHJcbiAgfVxyXG5cclxuICBkZWxldGVDYXJkKGlkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH1gLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgIH0pXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXMpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5sb2coYNCe0YjQuNCx0LrQsDogJHtlcnJ9YCkpO1xyXG4gIH1cclxuXHJcbiAgYWRkTGlrZShpZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9L2xpa2VzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICB9KVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZXMuc3RhdHVzKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyfWApKTtcclxuICB9XHJcblxyXG4gIHJlbW92ZUxpa2UoaWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfS9saWtlc2AsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1cyk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwOiAke2Vycn1gKSk7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHsgaGVhZGVyczogdGhpcy5faGVhZGVycyB9KVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZXMuc3RhdHVzKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyfWApKTtcclxuICB9XHJcblxyXG4gIHBhdGNoVXNlckluZm8obmFtZSwgYWJvdXQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBuYW1lLFxyXG4gICAgICAgIGFib3V0OiBhYm91dCxcclxuICAgICAgfSksXHJcbiAgICB9KVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZXMuc3RhdHVzKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LA6ICR7ZXJyfWApKTtcclxuICB9XHJcblxyXG4gIHBhdGNoVXNlckF2YXRhcihhdmF0YXIpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgYXZhdGFyOiBhdmF0YXIsXHJcbiAgICAgIH0pLFxyXG4gICAgfSlcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVzLnN0YXR1cyk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwOiAke2Vycn1gKSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogXCJodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTMzXCIsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCIyMGYxYmViNi02ODAxLTRhNjctYTFlMi00YTE3MzgwZGMyOTlcIixcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gIH0sXHJcbn0pO1xyXG4iLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgKiBhcyB1dGlscyBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtYXRpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcbmltcG9ydCB7IGFwaSB9IGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xuXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuXG5jb25zdCBwcmV2aWV3UG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UodXRpbHMucHJldmlld1BvcHVwU2VsZWN0b3IsIHtcbiAgcGhvdG9TZWxlY3RvcjogdXRpbHMucGhvdG9TZWxlY3RvcixcbiAgY2FwdGlvblNlbGVjdG9yOiB1dGlscy5jYXB0aW9uU2VsZWN0b3IsXG59KTtcbnByZXZpZXdQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5jb25zdCBjb25maXJtYXRpb25Qb3B1cCA9IG5ldyBQb3B1cFdpdGhDb25maXJtYXRpb24oXG4gIHV0aWxzLmNvbmZpcm1hdGlvblBvcHVwU2VsZWN0b3IsXG4gIChkYXRhKSA9PiBhcGkuZGVsZXRlQ2FyZChkYXRhLmlkKS50aGVuKCgpID0+IHtcbiAgICBjYXJkc0xpc3QucmVtb3ZlSXRlbShkYXRhLmVsZW1lbnQpO1xuICAgIGNvbmZpcm1hdGlvblBvcHVwLmNsb3NlKCk7XG4gIH0pXG4pO1xuY29uZmlybWF0aW9uUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgY2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0odXRpbHMuY2FyZFBvcHVwU2VsZWN0b3IsIChkYXRhKSA9PlxuICBhcGkucG9zdENhcmQoZGF0YS5uYW1lLCBkYXRhLmxpbmspLnRoZW4oKGRhdGEpID0+IHtcbiAgICBjYXJkc0xpc3QuYWRkSXRlbShkYXRhKTtcbiAgICBjYXJkUG9wdXAuY2xvc2UoKTtcbiAgfSlcbik7XG5jYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmNvbnN0IGNhcmRQb3B1cFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHtcbiAgLi4udXRpbHMuY29uZmlnLFxuICBmb3JtU2VsZWN0b3I6IHV0aWxzLmNhcmRQb3B1cFNlbGVjdG9yLFxufSk7XG5jYXJkUG9wdXBWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG5jb25zdCBwcm9maWxlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh1dGlscy5wcm9maWxlUG9wdXBTZWxlY3RvciwgKHZhbHVlcykgPT4ge1xuICBwcm9maWxlUG9wdXAucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgYXBpXG4gICAgLnBhdGNoVXNlckluZm8odmFsdWVzLm5hbWUsIHZhbHVlcy5kZXNjcmlwdGlvbilcbiAgICAudGhlbigoZGF0YSkgPT4gdXNlckluZm8uc2V0VXNlckluZm8oZGF0YSkpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgcHJvZmlsZVBvcHVwLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xuICAgICAgcHJvZmlsZVBvcHVwLmNsb3NlKCk7XG4gICAgfSk7XG59KTtcbnByb2ZpbGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuY29uc3QgcHJvZmlsZVBvcHVwVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioe1xuICAuLi51dGlscy5jb25maWcsXG4gIGZvcm1TZWxlY3RvcjogdXRpbHMucHJvZmlsZVBvcHVwU2VsZWN0b3IsXG59KTtcbnByb2ZpbGVQb3B1cFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmNvbnN0IGF2YXRhclBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0odXRpbHMuYXZhdGFyUG9wdXBTZWxlY3RvciwgKGRhdGEpID0+IHtcbiAgYXZhdGFyUG9wdXAucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgYXBpXG4gICAgLnBhdGNoVXNlckF2YXRhcihkYXRhLmxpbmspXG4gICAgLnRoZW4oKCkgPT4ge1xuICAgICAgY29uc3QgaW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG4gICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7IC4uLmluZm8sIGF2YXRhcjogZGF0YS5saW5rIH0pO1xuICAgIH0pXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgYXZhdGFyUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gICAgICBhdmF0YXJQb3B1cC5jbG9zZSgpO1xuICAgIH0pO1xufSk7XG5hdmF0YXJQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuY29uc3QgYXZhdGFyUG9wdXBWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih7XG4gIC4uLnV0aWxzLmNvbmZpZyxcbiAgZm9ybVNlbGVjdG9yOiB1dGlscy5hdmF0YXJQb3B1cFNlbGVjdG9yLFxufSk7XG5hdmF0YXJQb3B1cFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKFxuICB1dGlscy5wcm9maWxlVGl0bGVTZWxlY3RvcixcbiAgdXRpbHMucHJvZmlsZVN1YnRpdGxlU2VsZWN0b3IsXG4gIHV0aWxzLnByb2ZpbGVBdmF0YXJJY29uU2VsZWN0b3Jcbik7XG5cbmNvbnN0IGNhcmRzTGlzdCA9IG5ldyBTZWN0aW9uKFxuICAoZGF0YSkgPT4gY3JlYXRlQ2FyZEVsZW1lbnQoZGF0YSksXG4gIHV0aWxzLmNhcmRzU2VsZWN0b3Jcbik7XG5cbnV0aWxzLmVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgcHJvZmlsZVBvcHVwVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xuICBjb25zdCBpbmZvID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcbiAgdXRpbHMucHJvZmlsZU5hbWUudmFsdWUgPSBpbmZvLm5hbWU7XG4gIHV0aWxzLnByb2ZpbGVKb2IudmFsdWUgPSBpbmZvLmFib3V0O1xuICBwcm9maWxlUG9wdXAub3BlbigpO1xufSk7XG5cbnV0aWxzLmFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBjYXJkUG9wdXBWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGNhcmRQb3B1cC5vcGVuKFwiXCIsIFwiXCIpO1xufSk7XG5cbnV0aWxzLmF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBhdmF0YXJQb3B1cFZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcbiAgYXZhdGFyUG9wdXAub3BlbigpO1xufSk7XG5cbmZ1bmN0aW9uIGNyZWF0ZUNhcmRFbGVtZW50KGRhdGEpIHtcbiAgY29uc3QgaW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChkYXRhLCBpbmZvLCB1dGlscy5jYXJkVGVtcGxhdGVTZWxlY3RvcixcbiAgICAodGl0bGUsIHBob3RvKSA9PiB7XG4gICAgICBwcmV2aWV3UG9wdXAub3Blbih0aXRsZSwgcGhvdG8pO1xuICAgIH0sXG4gICAgKGlkLCBpc0xpa2VkKSA9PiB7XG4gICAgICBpZiAoaXNMaWtlZClcbiAgICAgICAgYXBpLmFkZExpa2UoaWQpO1xuICAgICAgZWxzZVxuICAgICAgICBhcGkucmVtb3ZlTGlrZShpZCk7XG4gICAgfSxcbiAgICAoZWxlbWVudCwgaWQpID0+IHtcbiAgICAgIGNvbmZpcm1hdGlvblBvcHVwLm9wZW4oeyBlbGVtZW50LCBpZCB9KTtcbiAgICB9XG4gICk7XG4gIHJldHVybiBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xufVxuXG5hcGkuZ2V0VXNlckluZm8oKVxuICAudGhlbigoZGF0YSkgPT5cbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKSlcbiAgLnRoZW4oKCkgPT5cbiAgICBhcGkuZ2V0SW5pdGlhbENhcmRzKCkudGhlbigoZGF0YSkgPT4gY2FyZHNMaXN0LnJlbmRlckl0ZW1zKGRhdGEpKSk7XG5cbiJdLCJuYW1lcyI6WyJDYXJkIiwiaW5mbyIsImNhcmRUZW1wbGF0ZVNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwiaGFuZGxlRGVsZXRlQ2xpY2siLCJfaWQiLCJuYW1lIiwibGluayIsImxpa2VzIiwib3duZXIiLCJ0aGlzIiwiX3RleHQiLCJfaW1hZ2UiLCJfbGlrZXMiLCJfb3duZXIiLCJfdXNlckluZm8iLCJfY2FyZFRlbXBsYXRlU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZUxpa2VDbGljayIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9pc0xpa2VkIiwiX2xpa2VzQ291bnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2VsZW1lbnQiLCJfZ2V0VGVtcGxhdGUiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJ0aXRsZSIsInBob3RvIiwibGlrZUJ1dHRvbiIsImxpa2VDb3VudCIsImRlbGV0ZUJ1dHRvbiIsInRleHRDb250ZW50Iiwic3JjIiwiYWx0IiwibGVuZ3RoIiwic29tZSIsImxpa2UiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJpdGVtIiwiY2xvc2VzdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiX3JlbW92ZSIsIl9saWtlIiwidGFyZ2V0IiwiX3ByZXZpZXciLCJ0b2dnbGUiLCJGb3JtVmFsaWRhdG9yIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybSIsIl9pbnB1dCIsIl9zdWJtaXRCdXR0b24iLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2J1dHRvbkVsZW1lbnQiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJmb3JFYWNoIiwiaW5wdXRFbGVtZW50IiwiX2hpZGVJbnB1dEVycm9yIiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJfaXNWYWxpZCIsInZhbGlkaXR5IiwidmFsaWQiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwiX2hhc0ludmFsaWRJbnB1dCIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsImNvbmZpZyIsImNhcmRQb3B1cFNlbGVjdG9yIiwiYXZhdGFyUG9wdXBTZWxlY3RvciIsInByb2ZpbGVQb3B1cFNlbGVjdG9yIiwicHJvZmlsZVBvcHVwIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlSm9iIiwiZWRpdEJ1dHRvbiIsImFkZEJ1dHRvbiIsImF2YXRhckJ1dHRvbiIsIlNlY3Rpb24iLCJyZW5kZXJlciIsImNvbnRhaW5lclNlbGVjdG9yIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsImNhcmRFbGVtZW50IiwicHJlcGVuZCIsImVsZW1lbnQiLCJyZW1vdmVDaGlsZCIsImlubmVySFRNTCIsIml0ZW1zIiwiY2xlYXIiLCJhZGRJdGVtIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwiX2Nsb3NlUG9wdXBCeUVzY2FwZSIsImJpbmQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiX2Nsb3NlUG9wdXAiLCJjb250YWlucyIsImNsb3NlIiwia2V5IiwiUG9wdXBXaXRoSW1hZ2UiLCJwaG90b1NlbGVjdG9yIiwiY2FwdGlvblNlbGVjdG9yIiwiX3ByZXZpZXdQb3B1cFBob3RvIiwiX3ByZXZpZXdQb3B1cENhcHRpb24iLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX29yaWdTdWJtaXRCdXR0b25UZXh0IiwiX3N1Ym1pdEhhbmRsZXIiLCJyZXNldCIsImlzTG9hZGluZyIsIl9nZXRJbnB1dFZhbHVlcyIsIl9mb3JtVmFsdWVzIiwiaW5wdXQiLCJ2YWx1ZSIsIlBvcHVwV2l0aENvbmZpcm1hdGlvbiIsImRhdGEiLCJfZGF0YSIsIlVzZXJJbmZvIiwicHJvZmlsZVRpdGxlU2VsZWN0b3IiLCJwcm9maWxlU3ViVGl0bGVTZWxlY3RvciIsInByb2ZpbGVBdmF0YXJTZWxlY3RvciIsIl9uYW1lIiwiX2pvYiIsIl9hdmF0YXIiLCJfdXNlckRhdGEiLCJhYm91dCIsImF2YXRhciIsImFwaSIsIkFwaSIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsImZldGNoIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImF1dGhvcml6YXRpb24iLCJwcmV2aWV3UG9wdXAiLCJzZXRFdmVudExpc3RlbmVycyIsImNvbmZpcm1hdGlvblBvcHVwIiwiZGVsZXRlQ2FyZCIsImNhcmRzTGlzdCIsInJlbW92ZUl0ZW0iLCJjYXJkUG9wdXAiLCJ1dGlscyIsInBvc3RDYXJkIiwiY2FyZFBvcHVwVmFsaWRhdG9yIiwiZW5hYmxlVmFsaWRhdGlvbiIsInZhbHVlcyIsInJlbmRlckxvYWRpbmciLCJkZXNjcmlwdGlvbiIsInVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJmaW5hbGx5IiwicHJvZmlsZVBvcHVwVmFsaWRhdG9yIiwiYXZhdGFyUG9wdXAiLCJnZXRVc2VySW5mbyIsImF2YXRhclBvcHVwVmFsaWRhdG9yIiwib3BlbiIsImlzTGlrZWQiLCJhZGRMaWtlIiwicmVtb3ZlTGlrZSIsImdlbmVyYXRlQ2FyZCIsImNyZWF0ZUNhcmRFbGVtZW50IiwicmVzZXRWYWxpZGF0aW9uIiwiZ2V0SW5pdGlhbENhcmRzIiwicmVuZGVySXRlbXMiXSwic291cmNlUm9vdCI6IiJ9